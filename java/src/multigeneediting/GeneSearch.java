/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package multigeneediting;

import java.awt.CardLayout;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yi
 */
public class GeneSearch extends javax.swing.JFrame {
    private static CardLayout cardLayout = new CardLayout(); // 创建卡片布局的对象
    private static ArrayList<String[]> geneList = new ArrayList();
    private static DefaultTableModel geneTableModel;
    private static DefaultTableModel singleGeneTable1Model;
    private static DefaultTableModel singleGeneTable2Model;
    private static DefaultTableModel multiGeneTableModel;
    private static Vector geneTableSchemaVector = new Vector();
    private static Vector singleGeneTable1SchemaVector = new Vector();
    private static Vector singleGeneTable2SchemaVector = new Vector();
    private static Vector multiGeneTableSchemaVector = new Vector();
    
    /**
     * Creates new form GeneSearch
     */
    public GeneSearch() {
        initComponents();
        this.setLocationRelativeTo(null);//窗体居中显示
        this.setTitle("Gene Search");
        singleGeneMenu.setVisible(false);
        multiGeneMenu.setVisible(false);
        
        
        loadGeneList();
        initiateSchemaVector();
        refreshGeneTable(geneList);
        
//        refreshOtherTable(geneList, geneTableSchemaVector, singleGeneTable1);
//        refreshOtherTable(geneList, geneTableSchemaVector, singleGeneTable2);
//        refreshOtherTable(geneList, geneTableSchemaVector, multiGeneTable);
        
        rootPanel.setLayout(cardLayout);
        rootPanel.add("searchPanel",searchPanel);
        rootPanel.add("singleGenePanel",singleGenePanel);
        rootPanel.add("multiGenePanel",multiGenePanel);
        rootPanel.add("aboutPanel",aboutPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        copyMenu = new javax.swing.JMenuItem();
        rootPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchMenuPanel1 = new javax.swing.JPanel();
        searchMenuPanel2 = new javax.swing.JScrollPane();
        geneTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel("<html> 第一行<br/> 第二行<br/></html>");
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        queryGeneTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        showAllButton = new javax.swing.JButton();
        singleGenePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        singleGeneName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        singleGeneTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        singleGeneTable2 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        multiGenePanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        multiGeneNames = new javax.swing.JLabel();
        jScrollPanel2 = new javax.swing.JScrollPane();
        multiGeneTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        aboutPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        searchMenu = new javax.swing.JMenu();
        singleGeneMenu = new javax.swing.JMenu();
        multiGeneMenu = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenu();

        copyMenu.setText("Copy");
        popupMenu.add(copyMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(Toolkit.getDefaultToolkit().createImage(GeneSearch.class.getResource("logo.png")));
        setPreferredSize(new java.awt.Dimension(1200, 900));

        rootPanel.setPreferredSize(new java.awt.Dimension(1200, 900));

        searchPanel.setPreferredSize(new java.awt.Dimension(1200, 900));

        searchMenuPanel1.setAutoscrolls(true);

        javax.swing.GroupLayout searchMenuPanel1Layout = new javax.swing.GroupLayout(searchMenuPanel1);
        searchMenuPanel1.setLayout(searchMenuPanel1Layout);
        searchMenuPanel1Layout.setHorizontalGroup(
            searchMenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        searchMenuPanel1Layout.setVerticalGroup(
            searchMenuPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        searchMenuPanel2.setAutoscrolls(true);

        geneTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        geneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        geneTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                geneTableMouseReleased(evt);
            }
        });
        searchMenuPanel2.setViewportView(geneTable);

        jLabel1.setText("To use this tool:");
        jLabel1.setToolTipText("");

        jLabel3.setText("1. Search genes by inputing their IDs or names into \"Query Gene\"");

        jLabel4.setText("2. Press \"Search\" to start a search, or you can just scroll the bar and find the interested gene/genes");

        jLabel5.setText("3. Check the genes you want to explore in the search list (for selecting multi-genes, you can press Ctrl and click the genes)");

        jLabel6.setText("4. If you need more help or detailed explanations of the methods or our tool, see the about section.");

        jLabel7.setText("Enter query gene ID or name");

        jLabel8.setText("Query Gene");

        queryGeneTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        queryGeneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryGeneTextFieldActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/execute.png"))); // NOI18N
        jButton2.setText("Execute");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        showAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/showAll.png"))); // NOI18N
        showAllButton.setText("Show All");
        showAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel8)
                                .addGap(26, 26, 26)
                                .addComponent(queryGeneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(searchButton)
                                .addGap(39, 39, 39)
                                .addComponent(jButton2)
                                .addGap(42, 42, 42)
                                .addComponent(showAllButton))
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(searchMenuPanel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchMenuPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addComponent(searchMenuPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(searchButton)
                    .addComponent(jButton2)
                    .addComponent(queryGeneTextField)
                    .addComponent(showAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchMenuPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addGap(57, 57, 57))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Sigle Gene Editing");

        singleGeneName.setText("Gene Name");

        jLabel10.setText("Top five recommended spacers ");

        singleGeneTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        singleGeneTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                singleGeneTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(singleGeneTable1);

        singleGeneTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        singleGeneTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                singleGeneTable2MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(singleGeneTable2);

        jLabel11.setText("Header Description ");

        jLabel12.setText("spacer_ex: spacer extend sequence;     partner: the ensembl id of the interested gene's most potential cutting partner gene; ");

        jLabel13.setText("p_chr: chromosome of parter gene;      p_pos: partner cutting site position;      partner_site: cutting site sequence of the partner gene; ");

        jLabel14.setText("p_stra: partner gene strand;       cut_on: on-target cutting efficiency;       cut_partner: cutting efficiency at the partner gene’s cutting site;");

        jLabel15.setText("total off number: total off-target site number;       on_PCS: the PCS of on-target cutting;         partner_PCS: the PCS of the partner");

        jLabel23.setText("Most potential cutting partner ");

        javax.swing.GroupLayout singleGenePanelLayout = new javax.swing.GroupLayout(singleGenePanel);
        singleGenePanel.setLayout(singleGenePanelLayout);
        singleGenePanelLayout.setHorizontalGroup(
            singleGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singleGenePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(singleGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(singleGeneName)
                    .addComponent(jLabel10)
                    .addComponent(jLabel23)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(0, 1544, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
            .addComponent(jScrollPane1)
        );
        singleGenePanelLayout.setVerticalGroup(
            singleGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singleGenePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(singleGeneName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(9, 9, 9)
                .addComponent(jLabel14)
                .addGap(11, 11, 11)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setText("Multi Gene Editing");

        multiGeneNames.setText("Gene Name");

        multiGeneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        multiGeneTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                multiGeneTableMouseReleased(evt);
            }
        });
        jScrollPanel2.setViewportView(multiGeneTable);

        jLabel19.setText("Spacer_num: the number of spaces being selected;      genes: the interested genes to be cut;        positions: the cutting site positions;      average_PCS: the average PCS");

        jLabel20.setText("select_type: the strategies to select the spacers (same order as to Spacers), including \"independent design\", \"off target\" and \"common\" corresponding to three strategies OTO, LTA and OTA;");

        jLabel21.setText("Spacers: the sequence of selected spacer;       chrs: the chromosomes of the interested genes;       strands: the strands to be cut by the sgRNAs; ");

        jLabel22.setText("cut_ons: the cutting efficiencies at each cutting sites;       total off num: the total off-target site numbers;       PCSs: the PCS for each selected spacers;");

        javax.swing.GroupLayout multiGenePanelLayout = new javax.swing.GroupLayout(multiGenePanel);
        multiGenePanel.setLayout(multiGenePanelLayout);
        multiGenePanelLayout.setHorizontalGroup(
            multiGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multiGenePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(multiGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(multiGeneNames)
                    .addComponent(jLabel17)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 1286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1140, Short.MAX_VALUE))
            .addComponent(jScrollPanel2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        multiGenePanelLayout.setVerticalGroup(
            multiGenePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multiGenePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(multiGeneNames, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/multiGene.png"))); // NOI18N
        jLabel9.setText("Welcome to MultiGeneEditing");

        jLabel18.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel18.setText("CRISPR/Cas9 multi-gene editing involves a simultaneous participation of multiple sgRNAs to edit multiple targetgenes where each is edited by one of the sgRNAs. There");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel24.setText("are possibly numerous sgRNA candidates capable of the on-target editing on a gene with various efficiencies. Meanwhile, each of these sgRNA candidates may cause ");

        jLabel25.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel25.setText("unwanted off-target editing at many other genes. Therefore, selection for these multiple sgRNAs should be optimized so as to minimize the number of  sgRNAs and also");

        jLabel26.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel26.setText("to reducethe collective negative effects caused by the off-targetediting. Though off-target editing is unavoidable, those disfavored cuttings by some target genes’ sgRNAs ");

        jLabel27.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel27.setText("can potentially become on-target editing sites for some other genes of interests. This off-to-on role conversion is beneficial to optimize the sgRNA selection in multi-gene");

        jLabel28.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel28.setText("editing. We define a preference cutting score to assess those beneficial off-target cutting sites which have a few mismatches with their host genes' on-target editing sites.");

        jLabel29.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel29.setText("These potential sgRNAs are then prioritized for recommendation via ranking their average on-target cutting efficiency, the total off-target site number and their average");

        jLabel30.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel30.setText("preference cutting score. Case studies on cancer-associated genes have demonstrated tremendous usefulness of the method. A tool for recommending sgRNAs to");

        jLabel31.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel31.setText("cut one or more genes is also developed. The tool and its source codes are available at Github (https://github.com/PennHui2016/multi-geneediting)");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cite.png"))); // NOI18N
        jLabel32.setText("Please Cite");

        jLabel33.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel33.setText("1. Peng, H., Zheng, Y., Zhao, Z., Liu, T., & Li, J. (2018). Recognition of CRISPR/Cas9 off-target sites through ensemble learning of uneven mismatch distributions.");

        jLabel34.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel34.setText("Bioinformatics, 34(17), i757-i765.");

        jLabel35.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel35.setText("2. Peng, H., Zheng, Y., Blumenstein, M., Tao, D., & Li, J. (2018). CRISPR/Cas9 cleavage efficiency regression through boosting algorithms and Markov sequence");

        jLabel36.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel36.setText(" profiling. Bioinformatics, 34(18), 3069-3077.");

        jLabel37.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel37.setText("3. Peng H., Zheng, Y., Zhao, Z., & Li, J. (xxxx). Optimization of CRISPR/Cas9 multi-gene editing through prioritizing beneficial off-target editing sites. xxxxxx");

        jLabel38.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel38.setText("xxxxxx, xx(xx), xxxx-xxxx.");

        javax.swing.GroupLayout aboutPanelLayout = new javax.swing.GroupLayout(aboutPanel);
        aboutPanel.setLayout(aboutPanelLayout);
        aboutPanelLayout.setHorizontalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel32))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(jLabel18)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel34)
                    .addComponent(jLabel29)
                    .addGroup(aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1278, Short.MAX_VALUE))
        );
        aboutPanelLayout.setVerticalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addGap(43, 43, 43)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 2436, Short.MAX_VALUE)
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(singleGenePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(multiGenePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootPanelLayout.createSequentialGroup()
                    .addComponent(aboutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootPanelLayout.createSequentialGroup()
                    .addComponent(singleGenePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 294, Short.MAX_VALUE)))
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootPanelLayout.createSequentialGroup()
                    .addComponent(multiGenePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 33, Short.MAX_VALUE)))
            .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootPanelLayout.createSequentialGroup()
                    .addComponent(aboutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        searchMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        searchMenu.setText("Search");
        searchMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(searchMenu);

        singleGeneMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/singleGene.png"))); // NOI18N
        singleGeneMenu.setText("SingleGene");
        singleGeneMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                singleGeneMenuMouseClicked(evt);
            }
        });
        singleGeneMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleGeneMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(singleGeneMenu);

        multiGeneMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/multiGene.png"))); // NOI18N
        multiGeneMenu.setText("MultiGene");
        multiGeneMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                multiGeneMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(multiGeneMenu);

        aboutMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/about.png"))); // NOI18N
        aboutMenu.setText("About");
        aboutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(aboutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1190, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryGeneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryGeneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queryGeneTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String keyword = queryGeneTextField.getText().trim().toLowerCase();
        if(keyword.length()>0){
            ArrayList<String[]> hitGeneList = new ArrayList();
            String esembleId;
            String geneSymbol;
            for(int i=0; i<geneList.size(); i++){
                esembleId = geneList.get(i)[0].toLowerCase();
                geneSymbol = geneList.get(i)[1].toLowerCase();
                if(esembleId.indexOf(keyword) != -1 || geneSymbol.indexOf(keyword) != -1){
                    hitGeneList.add(geneList.get(i));
                }
            }
            if(hitGeneList.size()>0){
                refreshGeneTable(hitGeneList);
            }else{
                JOptionPane.showMessageDialog(null, "No related genes are found, please try other keywords.", "Error", JOptionPane.ERROR_MESSAGE);
//                refreshGeneTable(geneList);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please input a valid Gene Esemble ID or Gene Symbol.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void singleGeneMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleGeneMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_singleGeneMenuActionPerformed

    private void singleGeneMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleGeneMenuMouseClicked
        // TODO add your handling code here:
        cardLayout.show(rootPanel, "singleGenePanel");
    }//GEN-LAST:event_singleGeneMenuMouseClicked

    private void searchMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMenuMouseClicked
        // TODO add your handling code here:
        cardLayout.show(rootPanel, "searchPanel");
    }//GEN-LAST:event_searchMenuMouseClicked

    private void multiGeneMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multiGeneMenuMouseClicked
        // TODO add your handling code here:
        cardLayout.show(rootPanel, "multiGenePanel");
    }//GEN-LAST:event_multiGeneMenuMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        excuteGeneEditing();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void geneTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_geneTableMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());     
        }
        Tool.copyTableCell(geneTable);
    }//GEN-LAST:event_geneTableMouseReleased

    private void singleGeneTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleGeneTable1MouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());     
        }
        Tool.copyTableCell(singleGeneTable1);
    }//GEN-LAST:event_singleGeneTable1MouseReleased

    private void singleGeneTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singleGeneTable2MouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());     
        }
        Tool.copyTableCell(singleGeneTable2);
    }//GEN-LAST:event_singleGeneTable2MouseReleased

    private void multiGeneTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multiGeneTableMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());     
        }
        Tool.copyTableCell(multiGeneTable);
    }//GEN-LAST:event_multiGeneTableMouseReleased

    private void showAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllButtonActionPerformed
        // TODO add your handling code here:
        refreshGeneTable(geneList);
    }//GEN-LAST:event_showAllButtonActionPerformed

    private void aboutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMenuMouseClicked
        // TODO add your handling code here:
        cardLayout.show(rootPanel, "aboutPanel");
    }//GEN-LAST:event_aboutMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneSearch().setVisible(true);
            }
        });
    }
    
    //Load gene list from csv file
    private void loadGeneList(){
        String geneListFilePath = Tool.projectDir + File.separator + "GeneList.csv";
        if(new File(geneListFilePath).exists()){
            ArrayList<String> lines = Tool.readFileByLines(geneListFilePath);
            for(String line:lines){
                String[] items =line.split(",");
                if(items.length == 6){
                    geneList.add(items);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "No gene list is detected, please put \n GeneList.csv to the current directory.", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }
    
    //Refresh gene table
    private void refreshGeneTable(ArrayList<String[]> showGeneList){
        Vector table = new Vector();
        for(int i=0; i<showGeneList.size(); i++){
            Vector row=new Vector();
//            row.add("");
            row.add(i+1);
            String[] items = showGeneList.get(i);
            for(String item:items){
                row.add(item);
            }
            table.add(row);
        }
        geneTableModel = new DefaultTableModel(table,geneTableSchemaVector);
        geneTable.setModel(geneTableModel);
        geneTable.updateUI();
    }
    
    //Refresh other tables
     private void refreshOtherTable(ArrayList<String[]> list, Vector schemaVector, JTable tablePanel){
        Vector tableVector = new Vector();
        for(int i=0; i<list.size(); i++){
            Vector row=new Vector();
            String[] items = list.get(i);
            for(String item:items){
                row.add(item);
            }
            tableVector.add(row);
        }
        DefaultTableModel tableModel = new DefaultTableModel(tableVector,schemaVector);
        tablePanel.setModel(tableModel);
        tablePanel.updateUI();
    }
     
    //Excute gene editing
    private void excuteGeneEditing(){
        //Get all selected genes
        int[] indices = geneTable.getSelectedRows();
        ArrayList<String> selectedGenes = new ArrayList();
        if(indices.length>0){
            for(int index:indices){
                selectedGenes.add(geneTable.getValueAt(index,1).toString());
            }
        }
        
        //Jump to process
        String geneStr = "";
        if(selectedGenes.size()<1){
            JOptionPane.showMessageDialog(null, "Please select one gene at least!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else if(selectedGenes.size() == 1){
            geneStr = selectedGenes.get(0);
        }else{
            for(int i=0; i<selectedGenes.size(); i++){
                geneStr += selectedGenes.get(i) + ",";
            }
            geneStr = geneStr.substring(0, geneStr.length()-1);
        }
        
        String timestamp = new Date().getTime()+"";
//        timestamp = "20191026010101";
        int countDownSecs = 30; // Count down for 30 seconds
        String rootDir = Tool.projectDir;
        if(geneStr!=null&&geneStr.length()>0){
            String pythonFilePath = rootDir + File.separator + "code" + File.separator + "display_result.py";
            if(!new File(pythonFilePath).exists()){
                JOptionPane.showMessageDialog(null, "Python file not exist: " + pythonFilePath, "Error", JOptionPane.ERROR_MESSAGE);
            }
            String str="python " + pythonFilePath  + " " + geneStr + " " + timestamp + " " + rootDir;// + File.separator + "code";
            Tool.callPyByCommand(str);
            String[] genes = geneStr.split(",");
            System.out.println(str);
            if(genes.length>1){
                multiGeneNames.setText(geneStr);
                while(countDownSecs>0){
                    File file = new File(rootDir + File.separator + "results/multi_gene_spacer_" + timestamp + ".csv");
                    if(file.exists()){
                        ArrayList<String[]> multiGeneSpacerList = Tool.readFileAsArrayList(file);
                        refreshOtherTable(multiGeneSpacerList, multiGeneTableSchemaVector, multiGeneTable);
                        cardLayout.show(rootPanel, "multiGenePanel");
                        file.delete();
                        break;
                    }
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(GeneSearch.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    countDownSecs--;
                }
                if(countDownSecs<=0){
                    JOptionPane.showMessageDialog(null, "Time out, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                singleGeneName.setText(geneStr);
                while(countDownSecs>0){
                    File file1 = new File(rootDir + File.separator+ "results/single_gene_spacer_" + timestamp + ".csv");
                    File file2 = new File(rootDir + File.separator + "results/single_gene_MPCP_" + timestamp + ".csv");
                    if(file1.exists()&&file2.exists()){
                        ArrayList<String[]> singleGeneSpacerList = Tool.readFileAsArrayList(file1);
                        ArrayList<String[]> singleGeneMPCPList = Tool.readFileAsArrayList(file2);
                        refreshOtherTable(singleGeneSpacerList, singleGeneTable1SchemaVector, singleGeneTable1);
                        refreshOtherTable( singleGeneMPCPList, singleGeneTable2SchemaVector, singleGeneTable2);
                        cardLayout.show(rootPanel, "singleGenePanel");
                        file1.delete();
                        file2.delete();
                        break;
                    }
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(GeneSearch.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    countDownSecs--;
                }
                if(countDownSecs<=0){
                    JOptionPane.showMessageDialog(null, "Time out, please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    //Initiate all table schemas
    private void initiateSchemaVector(){
//        geneTableSchemaVector.add("Check");
        geneTableSchemaVector.add("Index");
        geneTableSchemaVector.add("Ensemble Id");
        geneTableSchemaVector.add("Gene Symbol");
        geneTableSchemaVector.add("Chromosome");
        geneTableSchemaVector.add("Start Position");
        geneTableSchemaVector.add("End Position");
        geneTableSchemaVector.add("Strand");

        singleGeneTable1SchemaVector.add("Index");
        singleGeneTable1SchemaVector.add("Spacer Sequence");
        singleGeneTable1SchemaVector.add("Spacer Extend Sequence");
        singleGeneTable1SchemaVector.add("Position");
        singleGeneTable1SchemaVector.add("Strand");
        singleGeneTable1SchemaVector.add("Cut Efficiency");
        singleGeneTable1SchemaVector.add("Off Target Site Number");
        singleGeneTable1SchemaVector.add("PCS");
        
        singleGeneTable2SchemaVector.add("Spacer");
        singleGeneTable2SchemaVector.add("Spacer ex");
        singleGeneTable2SchemaVector.add("strand");
        singleGeneTable2SchemaVector.add("position");
        singleGeneTable2SchemaVector.add("partner");
        singleGeneTable2SchemaVector.add("p_chr");
        singleGeneTable2SchemaVector.add("p_pos");
        singleGeneTable2SchemaVector.add("p_stra");
        singleGeneTable2SchemaVector.add("partner Site");
        singleGeneTable2SchemaVector.add("cut_on");
        singleGeneTable2SchemaVector.add("cut_partner");
        singleGeneTable2SchemaVector.add("total off num	");
        singleGeneTable2SchemaVector.add("on_PCS");
        singleGeneTable2SchemaVector.add("partner_PCS");
        singleGeneTable2SchemaVector.add("mean_PCS");
        
        multiGeneTableSchemaVector.add("spacer num");
        multiGeneTableSchemaVector.add("select_types");
        multiGeneTableSchemaVector.add("Spacers");
        multiGeneTableSchemaVector.add("genes");
        multiGeneTableSchemaVector.add("chrs");
        multiGeneTableSchemaVector.add("strands");
        multiGeneTableSchemaVector.add("positions");
        multiGeneTableSchemaVector.add("cut_ons");
        multiGeneTableSchemaVector.add("total off num");
        multiGeneTableSchemaVector.add("PCSs");
        multiGeneTableSchemaVector.add("average_PCS");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JPanel aboutPanel;
    private javax.swing.JMenuItem copyMenu;
    private javax.swing.JTable geneTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPanel2;
    private javax.swing.JMenu multiGeneMenu;
    private javax.swing.JLabel multiGeneNames;
    private javax.swing.JPanel multiGenePanel;
    private javax.swing.JTable multiGeneTable;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JTextField queryGeneTextField;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JMenu searchMenu;
    private javax.swing.JPanel searchMenuPanel1;
    private javax.swing.JScrollPane searchMenuPanel2;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JButton showAllButton;
    private javax.swing.JMenu singleGeneMenu;
    private javax.swing.JLabel singleGeneName;
    private javax.swing.JPanel singleGenePanel;
    private javax.swing.JTable singleGeneTable1;
    private javax.swing.JTable singleGeneTable2;
    // End of variables declaration//GEN-END:variables
}
